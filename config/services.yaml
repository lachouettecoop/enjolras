# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    domain_name: '%env(resolve:LDAP_DOM)%'
    username: '%env(resolve:LDAP_USER)%'
    password: '%env(resolve:LDAP_PASS)%'
    base_dn: '%env(resolve:LDAP_DN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $ldapDomain: '%domain_name%'
            $ldapUsername: '%username%'
            $ldapPassword: '%password%'
            $ldapBaseDn: '%base_dn%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    sonata.admin.subject:
        class: App\Admin\SubjectAdmin
        tags:
        - { name: sonata.admin, manager_type: orm, group: "Discussions", label: "Sujet" }
        arguments:
        - ~
        - App\Entity\Subject
        - ~
        calls:
        - [ setTranslationDomain, [EnjolrasBundle]]

    sonata.admin.solution:
        class: App\Admin\SolutionAdmin
        tags:
        - { name: sonata.admin, manager_type: orm, group: "Discussions", label: "Solution" }
        arguments:
        - ~
        - App\Entity\Solution
        - ~
        calls:
        - [ setTranslationDomain, [EnjolrasBundle]]

    admin.argument:
        class: App\Admin\ArgumentAdmin
        arguments: [~, App\Entity\Argument, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Argument }
        public: true
